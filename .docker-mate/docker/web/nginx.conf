# Configuration File - Nginx Server Configs
# http://nginx.org/en/docs/dirindex.html

# Run as a unique, less privileged user for security reasons.
# Default: nobody nobody
user nginx;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
# Default: 1
worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
# Default: no limit
worker_rlimit_nofile 8192;

events {
    # If you need more connections than this, you start optimizing your OS.
    # That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
    # Should be < worker_rlimit_nofile.
    # Default: 512
    worker_connections 8000;
}

# Log errors and warnings to this file
# This is only used when you don't override it on a server{} level
# Default: logs/error.log error
error_log /var/log/nginx/error.log warn;

# The file storing the process ID of the main process
# Default: nginx.pid
pid /run/nginx.pid;

http {

    # Hide nginx version information.
    # Default: on
    server_tokens off;

    resolver 127.0.0.11;

    # Setup the fastcgi cache.
    fastcgi_buffers 8 8k;
    fastcgi_buffer_size 8k;
    fastcgi_read_timeout 120s;
    fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=wordpress:10m max_size=250m inactive=1h;
    fastcgi_cache_use_stale updating error timeout invalid_header http_500;
    fastcgi_cache_lock on;
    fastcgi_cache_key $realpath_root$scheme$host$request_uri$request_method$http_origin;
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
    fastcgi_pass_header Set-Cookie;
    fastcgi_pass_header Cookie;

    # Specify MIME types for files.
    include       mime.types;

    # Default: text/plain
    default_type  application/octet-stream;

    # Update charset_types to match updated mime.types.
    # text/html is always included by charset module.
    # Default: text/html text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml
    charset_types
    text/css
    text/plain
    text/vnd.wap.wml
    application/javascript
    application/json
    application/rss+xml
    application/xml;

    # Include $http_x_forwarded_for within default format used in log files
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Log access to this file
    # This is only used when you don't override it on a server{} level
    # Default: logs/access.log combined
    access_log /var/log/nginx/access.log main;

    # How long to allow each connection to stay idle.
    # Longer values are better for each individual client, particularly for SSL,
    # but means that worker connections are tied up longer.
    # Default: 75s
    keepalive_timeout 20s;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    # For performance reasons, on FreeBSD systems w/ ZFS
    # this option should be disabled as ZFS's ARC caches
    # frequently used files in RAM by default.
    # Default: off
    sendfile        on;

    # Don't send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out.
    # Default: off
    tcp_nopush      on;

    # Compression

    # Enable gzip compression.
    # Default: off
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    # Default: 1
    gzip_comp_level    5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    # Default: 20
    gzip_min_length    256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    # Default: off
    gzip_proxied       any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    # Default: off
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    # text/html is always compressed by gzip module.
    # Default: text/html
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    # Set the max body size equal to PHP's max POST size.
    client_max_body_size 100m;

    include site.conf;

    server {
        listen [::]:80;
        listen 80;
        server_name phpmyadmin.*;

        set $phpmyadmin phpmyadmin:9000;

        location / {
            root /usr/share/phpmyadmin/;
            index index.php;
            location ~ \.php$ {
                try_files      $uri = 404;
                include        fastcgi_params;
                fastcgi_split_path_info ^\/(.+\.php)(.*)$;
                fastcgi_param  SCRIPT_FILENAME $fastcgi_script_name;
                fastcgi_pass   $phpmyadmin;
            }
        }
    }
}
